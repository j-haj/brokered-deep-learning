// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task_service/task_service.proto

package task_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	TaskObj              []byte   `protobuf:"bytes,3,opt,name=task_obj,json=taskObj,proto3" json:"task_obj,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_1577df39a6a84649, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *Task) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Task) GetTaskObj() []byte {
	if m != nil {
		return m.TaskObj
	}
	return nil
}

type TaskRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskRequest) Reset()         { *m = TaskRequest{} }
func (m *TaskRequest) String() string { return proto.CompactTextString(m) }
func (*TaskRequest) ProtoMessage()    {}
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1577df39a6a84649, []int{1}
}

func (m *TaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRequest.Unmarshal(m, b)
}
func (m *TaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRequest.Marshal(b, m, deterministic)
}
func (m *TaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRequest.Merge(m, src)
}
func (m *TaskRequest) XXX_Size() int {
	return xxx_messageInfo_TaskRequest.Size(m)
}
func (m *TaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRequest proto.InternalMessageInfo

type ResultResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultResponse) Reset()         { *m = ResultResponse{} }
func (m *ResultResponse) String() string { return proto.CompactTextString(m) }
func (*ResultResponse) ProtoMessage()    {}
func (*ResultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1577df39a6a84649, []int{2}
}

func (m *ResultResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultResponse.Unmarshal(m, b)
}
func (m *ResultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultResponse.Marshal(b, m, deterministic)
}
func (m *ResultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultResponse.Merge(m, src)
}
func (m *ResultResponse) XXX_Size() int {
	return xxx_messageInfo_ResultResponse.Size(m)
}
func (m *ResultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResultResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Task)(nil), "task_service.Task")
	proto.RegisterType((*TaskRequest)(nil), "task_service.TaskRequest")
	proto.RegisterType((*ResultResponse)(nil), "task_service.ResultResponse")
}

func init() { proto.RegisterFile("task_service/task_service.proto", fileDescriptor_1577df39a6a84649) }

var fileDescriptor_1577df39a6a84649 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x49, 0x2c, 0xce,
	0x8e, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x47, 0xe6, 0xe8, 0x15, 0x14, 0xe5, 0x97,
	0xe4, 0x0b, 0xf1, 0x20, 0x8b, 0x29, 0x05, 0x71, 0xb1, 0x84, 0x24, 0x16, 0x67, 0x0b, 0x89, 0x73,
	0xb1, 0x83, 0xc5, 0x33, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xd8, 0x40, 0x5c, 0xcf,
	0x14, 0x21, 0x31, 0x2e, 0xb6, 0xe2, 0xfc, 0xd2, 0xa2, 0xe4, 0x54, 0x09, 0x26, 0x88, 0x38, 0x84,
	0x27, 0x24, 0xc9, 0xc5, 0x01, 0xd6, 0x90, 0x9f, 0x94, 0x25, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x13,
	0x04, 0x36, 0xc0, 0x3f, 0x29, 0x4b, 0x89, 0x97, 0x8b, 0x1b, 0x64, 0x66, 0x50, 0x6a, 0x61, 0x69,
	0x6a, 0x71, 0x89, 0x92, 0x00, 0x17, 0x5f, 0x50, 0x6a, 0x71, 0x69, 0x4e, 0x49, 0x50, 0x6a, 0x71,
	0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x91, 0x2f, 0x44, 0x41, 0x30, 0xc4, 0x0d, 0x42, 0x76, 0x5c, 0xdc,
	0x50, 0xb5, 0x60, 0xa7, 0x48, 0xea, 0xa1, 0xb8, 0x1a, 0xc9, 0x28, 0x29, 0x21, 0x4c, 0x29, 0x25,
	0x06, 0x27, 0xe5, 0x28, 0xc5, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0xfd,
	0x2c, 0xdd, 0x8c, 0xc4, 0x2c, 0xfd, 0xa4, 0x94, 0x1c, 0x14, 0xcf, 0x27, 0xb1, 0x81, 0x7d, 0x6f,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x84, 0xae, 0x39, 0x20, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	RequestTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*Task, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) RequestTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := c.cc.Invoke(ctx, "/task_service.TaskService/RequestTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	RequestTask(context.Context, *TaskRequest) (*Task, error)
}

// UnimplementedTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServiceServer struct {
}

func (*UnimplementedTaskServiceServer) RequestTask(ctx context.Context, req *TaskRequest) (*Task, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestTask not implemented")
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_RequestTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).RequestTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task_service.TaskService/RequestTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).RequestTask(ctx, req.(*TaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "task_service.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestTask",
			Handler:    _TaskService_RequestTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task_service/task_service.proto",
}
